AWSTemplateFormatVersion: 2010-09-09

Parameters:
  # Common Availability Zone

  AvailabilityZones:
    Type: String
    Default: us-east-1a
    Description: The Region to use. Default Region is us-east-1a.

  # For Ec2 Instance

  InstanceTypeParameter:
    Type: String
    Default: t2.micro
    Description: Enter instance size. Default is t2.micro.

  AMI:
    Type: String
    Default: ami-04505e74c0741db8d
    Description: The Linux AMI to use. Default is Ubuntu.

Resources:
  # For VPC
  VPC:
    Type: "AWS::EC2::VPC"
    Properties:
      CidrBlock: 10.0.0.0/16
      EnableDnsSupport: "true"
      EnableDnsHostnames: "true"
      Tags:
        - Key: Name
          Value: Food At Rescue

  InternetGateway:
    Type: "AWS::EC2::InternetGateway"
    Properties:
      Tags:
        - Key: Name
          Value: Food At Rescue

  InternetGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref VPC

  PublicSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref VPC
      AvailabilityZone: us-east-1a
      CidrBlock: 10.0.1.0/24
      MapPublicIpOnLaunch: true
      Tags:
        - Key: Name
          Value: Food At Rescue Public Subnet (AZ1)

  PublicRouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: Food At Rescue Public Routes

  DefaultPublicRoute:
    Type: AWS::EC2::Route
    DependsOn: InternetGatewayAttachment
    Properties:
      RouteTableId: !Ref PublicRouteTable
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  PublicSubnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      RouteTableId: !Ref PublicRouteTable
      SubnetId: !Ref PublicSubnet1
  # For Backend

  NodeJSBackend:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Ref AMI
      InstanceType: !Ref InstanceTypeParameter
      SubnetId: !Ref PublicSubnet1
      KeyName: foodatrescue
      SecurityGroupIds:
        - !Ref EC2BackendSecurityGroup
      Tags:
        - Key: Name
          Value: Food At Rescue EC2

  EC2BackendSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: NodeJS Backend Security Group
      GroupDescription: "Allow HTTP/HTTPS and SSH inbound and outbound traffic"
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 8080
          ToPort: 8080
          CidrIp: 0.0.0.0/0
      VpcId: !Ref VPC
Outputs:
  InstanceId:
    Description: Instance Id of EC2 Instance
    Value: !Ref NodeJSBackend
  PublicDNS:
    Description: Public DNS of the EC2 Instance
    Value: !GetAtt
      - NodeJSBackend
      - PublicDnsName
  PublicIP:
    Description: Public IP of the EC2 Instance
    Value: !GetAtt
      - NodeJSBackend
      - PublicIp
